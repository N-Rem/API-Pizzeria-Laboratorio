// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240626190254_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Delicious pizza with tomato sauce, mozzarella, and anchovies.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Napolitana",
                            Price = 10,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 2,
                            Description = "Classic pizza with tomato sauce, mozzarella, and fresh basil.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Margherita",
                            Price = 8,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 3,
                            Description = "Pizza with tomato sauce, mozzarella, and spicy pepperoni.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Pepperoni",
                            Price = 12,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 4,
                            Description = "Tropical pizza with tomato sauce, mozzarella, ham, and pineapple.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Hawaiian",
                            Price = 11,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 5,
                            Description = "Pizza with mozzarella, cheddar, parmesan, and gorgonzola.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Four Cheese",
                            Price = 13,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 6,
                            Description = "Pizza with tomato sauce, mozzarella, mushrooms, peppers, and onions.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Vegetarian",
                            Price = 9,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 7,
                            Description = "Pizza with BBQ sauce, mozzarella, shredded chicken, onions, and corn.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Barbecue",
                            Price = 14,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 8,
                            Description = "Pizza with tomato sauce, mozzarella, mussels, clams, and shrimp.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Seafood",
                            Price = 15,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 9,
                            Description = "Pizza with tomato sauce, mozzarella, and spicy Italian sausage.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Spicy Sausage",
                            Price = 13,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 10,
                            Description = "Pizza with truffle cream, mozzarella, and assorted mushrooms.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Truffle Mushroom",
                            Price = 16,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 11,
                            Description = "Pizza with buffalo sauce, mozzarella, and spicy chicken strips.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Buffalo Chicken",
                            Price = 14,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 12,
                            Description = "Pizza with pesto sauce, mozzarella, cherry tomatoes, and arugula.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Pesto Delight",
                            Price = 12,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 13,
                            Description = "Pizza with tomato sauce, mozzarella, jalapenos, and ground beef.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Mexican",
                            Price = 14,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 14,
                            Description = "Pizza with tomato sauce, mozzarella, and thinly sliced prosciutto.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Prosciutto",
                            Price = 15,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 15,
                            Description = "Pizza with tomato sauce, mozzarella, feta cheese, and black olives.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Greek",
                            Price = 13,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 16,
                            Description = "Pizza with tomato sauce, mozzarella, ham, mushrooms, and artichokes.",
                            ImageUrl = "https://i.postimg.cc/mkkxk6h5/ivan-torres-MQUqbmsz-GGM-unsplash.jpg",
                            Name = "Capricciosa",
                            Price = 14,
                            Stock = 1000
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "Nicolas123",
                            Rol = "SuperAdmin",
                            UserName = "Nicolas"
                        },
                        new
                        {
                            Id = 2,
                            Password = "Anabella123",
                            Rol = "SuperAdmin",
                            UserName = "Anabella"
                        },
                        new
                        {
                            Id = 3,
                            Password = "Delfina123",
                            Rol = "SuperAdmin",
                            UserName = "Delfina"
                        },
                        new
                        {
                            Id = 5,
                            Password = "marta123",
                            Rol = "Admin",
                            UserName = "marta_admin"
                        },
                        new
                        {
                            Id = 6,
                            Password = "johnAdmin123",
                            Rol = "Admin",
                            UserName = "john_admin"
                        },
                        new
                        {
                            Id = 7,
                            Password = "janeAdmin123",
                            Rol = "Admin",
                            UserName = "jane_admin"
                        },
                        new
                        {
                            Id = 8,
                            Password = "alice123",
                            Rol = "Client",
                            UserName = "alice"
                        },
                        new
                        {
                            Id = 9,
                            Password = "bob123",
                            Rol = "Client",
                            UserName = "bob"
                        },
                        new
                        {
                            Id = 10,
                            Password = "charlie123",
                            Rol = "Client",
                            UserName = "charlie"
                        },
                        new
                        {
                            Id = 11,
                            Password = "dave123",
                            Rol = "Client",
                            UserName = "dave"
                        },
                        new
                        {
                            Id = 12,
                            Password = "eve123",
                            Rol = "Client",
                            UserName = "eve"
                        },
                        new
                        {
                            Id = 13,
                            Password = "frank123",
                            Rol = "Client",
                            UserName = "frank"
                        },
                        new
                        {
                            Id = 14,
                            Password = "grace123",
                            Rol = "Client",
                            UserName = "grace"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProducts");
                });

            modelBuilder.Entity("Domain.Entities.UserProduct", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("UserProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserProducts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("UserProducts");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("UserProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
